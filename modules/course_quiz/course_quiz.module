<?php

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function course_quiz_autoload_info() {
  return array(
    'CourseObjectQuiz' => array('file' => 'course_object.quiz.inc'),
  );
}


/**
 * Implements hook_course_object_info().
 */
function course_quiz_course_object_info() {
  return array(
    'quiz' => array(
      'title' => 'Quiz',
      'graded' => TRUE,
      'class' => 'CourseObjectQuiz',
      'group' => 'Tests',
    ),
  );
}

/**
 * Presave must return an instance ID.
 */
function course_quiz_course_object_api($node, $op, $object) {
  if ($op == 'presave') {
    switch ($object['requirement_component']) {
      case 'quiz':
        if ($object['instance']) {
          $quiz = node_load($object['instance']);
        }
        else {
          $quiz = new stdClass;
        }
        $quiz->auto_created = TRUE;
        $quiz->type = 'quiz';
        $quiz->title = $object['title'];
        $quiz->uid = $node->uid;
        $quiz->quiz_always = TRUE;
        $quiz->quiz_open = $quiz->quiz_close = array(
          'month' => date('m'),
          'day' => date('d'),
          'year' => date('Y'),
        );
        $quiz = (object) array_merge(_quiz_get_node_defaults(), (array) $quiz);
        node_save($quiz);
        return $quiz->nid;
    }
  }
}

/**
 * Implements hook_quiz_finished().
 *
 * Update the fulfillment record.
 */
function course_quiz_quiz_finished($quiz, $score, $rid) {
  global $user;

  $courseObject = new CourseObjectQuiz($quiz->nid, $user);
  $courseObject->grade($user);
}

/**
 * Implements hook_nodeapi().
 *
 * Update passing grade.
 */
function course_quiz_nodeapi_OLD($node, $op, $a3, $a4) {
  // TODO Remaining code in this function needs to be moved to the appropriate new hook function.
  if ($node->type == 'quiz') {
    if ($op == 'insert' || $op == 'update') {
      $courseObject = new CourseObjectQuiz($node->nid);
      $courseObject->setPassingGrade($node->pass_rate)->setGraded(($node->pass_rate > 0))->save();
    }
  }
}
