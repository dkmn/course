<?php

/**
 * Implements hook_init().
 */
function course_poll_init() {
  $node = node_load(arg(1));
  if ($course = course_determine_context('course_poll', 'poll', $node->nid)) {
    course_set_context($course);
  }
}

/**
 * Implements hook_course_handlers().
 */
function course_poll_course_handlers() {
  return array(
    'object' => array(
      'poll' => array(
        'name' => t('Poll'),
        'class' => 'CourseObjectPoll',
        'description' => t('A poll to be used in a course workflow.'),
      ),
    ),
  );
}

/**
 * Implements hook_form_FORMID_alter().
 */
function course_poll_form_poll_view_voting_alter(&$form, &$form_state) {
  $form['vote']['#submit'][] = 'course_poll_fulfill';
}

/**
 * Fulfill the voting requirement.
 */
function course_poll_fulfill(&$form, &$form_state) {
  global $user;

  // Find the course object associated with this poll.
  $courseObject = course_get_course_object('course_poll', 'poll', arg(1), $user);
  $courseObject->getFulfillment()->setComplete()->save();
}

/**
 * Implements hook_autoload_info().
 */
function course_poll_autoload_info() {
  return array(
    'CourseObjectPoll' => array(
      'file' => 'course_poll.classes.inc',
    ),
  );
}
