<?php

/**
 * Course context handler callback.
 */
function course_book_context() {
  $node = node_load(arg(1));
  if ($node) {
    $bid = !empty($node->book['bid']) ? $node->book['bid'] : $node->nid;

    if ($bid) {
      return array(
        'object_type' => 'book',
        'instance' => $bid,
      );
    }
  }
}

/**
 * Implements hook_course_handlers().
 */
function course_book_course_handlers() {
  return array(
    'object' => array(
      'book' => array(
        'name' => t('Book'),
        'description' => t('A book course object.'),
        'class' => 'CourseObjectBook',
      ),
    ),
    'context' => array(
      'book' => array(
        'callback' => 'course_book_context',
      ),
    ),
  );
}

/**
 * Implements hook_nodeapi().
 */
function course_book_init() {
  if (arg(0) == 'node') {
    global $user;
    $node = node_load(arg(1));
    if ($node && $node->type == 'book') {
      $search = !empty($node->book['bid']) ? $node->book['bid'] : $node->nid;
      if ($courseObject = course_get_course_object('course_book', 'book', $search, $user)) {
        $options = array();
        // Mark this node as fulfillment in course_book's fulfillment tracking.
        if (!empty($node->book['mlid'])) {
          $options['book_fulfillment'][$node->book['mlid']] = TRUE;
          $courseObject->getFulfillment()->addOptions($options)->save();
          $courseObject->grade();
        }
      }
    }
  }
}
